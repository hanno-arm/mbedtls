#!/usr/bin/gawk -f

# This script converts the output of 'size --radix=10 --format=sysv <file>"
# into a series of lines of format:
# <file> <code-size> <rodata-size> <bss-size> <data-size> <code+rodata> <bss+data>

BEGIN {
    total_code=0;
    total_rodata=0;
    total_bss=0;
    total_data=0;
    libfile="";
}

# If we detect the beginning of a 'size' output block,
# reset all counter variables.
/:/{
    file=file_parts[split($1,file_parts,"/")]
    if( $2 == "(ex" ) {
        gsub(/):$/,"",$3);
        libfile=file_parts[split($3,file_parts,"/")]
    }
}

# Detect various section types and sum their sizes.
/^\.text/   { code   += $2 };
/^\.rodata/ { rodata += $2 };
/^\.bss/    { bss    += $2 };
/^\.data/   { data   += $2 };

# Print summary and reset on an empty line
/^$/{

    if( file ) {
        # Print column information at the beginning
        # if( total == 0 ) {
        #     printf( "#%29s  %6s  %6s  %6s  %6s  %6s  %6s\n",
        #             "file", "code", "rodata", "bss", "data",
        #             "#rom", "#sram" );
        # }

        rom  = code + rodata;
        sram = bss + data;
        printf( "%30s  %6d  %6d  %6d  %6d  %6d  %6d\n",
                file, code, rodata, bss, data,
                rom, sram );
        total++;
    }

    total_code   += code;
    total_rodata += rodata;
    total_bss    += bss;
    total_data   += data;

    file="";
    code=0;
    rodata=0;
    bss=0;
    data=0;
}

END {
    if( total == 0 ) {
        printf( "No sysv formatted size sections recognized. Did you feed input generated by 'size --format=sysv'?\n" );
    }
    else {
        if( libfile != "" ) {
            total_rom  = total_code + total_rodata;
            total_sram = total_bss + total_data;
            printf( "%30s  %6d  %6d  %6d  %6d  %6d  %6d\n",
                    libfile, total_code, total_rodata,
                    total_bss, total_data,
                    total_rom, total_sram );
        }
    }
}
